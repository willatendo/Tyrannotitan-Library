import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://plugins.gradle.org/m2/' }
		maven { url = 'https://repo.spongepowered.org/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
		classpath "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
		classpath 'io.freefair.gradle:lombok-plugin:6.3.0'
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.freefair.lombok'
apply plugin: 'org.spongepowered.mixin'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = '3.0.0'
group = 'tyrannotitanlib'
archivesBaseName = 'tyrannotitanlib'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

configurations {
	library
	shade
	implementation.extendsFrom library
	shade.extendsFrom library
}

minecraft {
	mappings channel: 'official', version: '1.18.1'
	
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
	runs {
		client {
			workingDirectory project.file('run')
			
			property 'forge.logging.markers', 'REGISTRIES'
			
			property 'forge.logging.console.level', 'debug'
			
			arg "-mixin.config=tyrannotitanlib.mixins.json"

			mods {
				tyrannotitanlib {
					source sourceSets.main
				}
			}
		}
		server {
			workingDirectory project.file('run')
			
			property 'forge.logging.markers', 'REGISTRIES'
			
			property 'forge.logging.console.level', 'debug'
			
			arg "-mixin.config=tyrannotitanlib.mixins.json"

			mods {
				tyrannotitanlib {
					source sourceSets.main
				}
			}
		}
	}
}

minecraft.runs.all {
	lazyToken('minecraft_classpath') {
		configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
	}
}

mixin {
    add sourceSets.main, 'tyrannotitanlib.mixins.refmap.json'
    config 'tyrannotitanlib.mixins.json'
}


repositories {
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	maven { url 'https://maven.enginehub.org/repo/' }
	maven { url 'https://repo.repsy.io/mvn/gandiber/geckolib' }
	maven { url 'https://maven.blamejared.com' }
	maven {
		name = "CurseForge"
		url = "https://minecraft.curseforge.com/api/maven/"
	}
	jcenter()
	maven {
		name = "jitpack"
		url "https://jitpack.io"
	}
	maven {
		url "https://maven.cloudsmith.io/geckolib3/geckolib/"
	}
	mavenCentral()
}

dependencies {
	minecraft 'net.minecraftforge:forge:1.18.1-39.0.10'
	
	library 'com.eliotlash.molang:molang:18'
	library 'com.eliotlash.mclib:mclib:18'
	library group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
	library group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
	
	shade 'com.eliotlash.molang:molang:18'
	shade 'com.eliotlash.mclib:mclib:18'
	shade group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
	shade group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
	
	annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

shadowJar {
	configurations = [project.configurations.shade]
	from sourceSets.main.allSource
	relocate 'com.eliotlash', 'shadowed.eliotlash'
	relocate 'com.fasterxml', 'shadowed.fasterxml'
	classifier ''
}


reobf {
	shadowJar {}
}

tasks.build.dependsOn reobfShadowJar
publish.dependsOn('reobfJar')
shadowJar.dependsOn('classes')
jar.finalizedBy('reobfJar')

jar {
	manifest {
		attributes([
				"Specification-Title" : "tyrannotitanlib",
				"Specification-Vendor" : "Willatendo",
				"Specification-Version" : "1",
				"Implementation-Title" : project.name,
				"Implementation-Version" : "3.0.0",
				"Implementation-Vendor" : "tyrannotitanlib",
				"Implementation-Timestamp" : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
       	     	"MixinConfigs": "tyrannotitanlib.mixins.json"
		])
	}
}

task packageSources(type: ShadowJar, dependsOn: 'classes') {
	configurations = [project.configurations.shade]
	from sourceSets.main.allSource
	exclude('META-INF/**')
	relocate 'com.eliotlash', 'shadowed.eliotlash'
	relocate 'com.fasterxml', 'shadowed.fasterxml'
	classifier = 'sources'
}

artifacts {
	archives shadowJar
	archives packageSources
}

afterEvaluate {
	publish.dependsOn('reobfShadowJar')
	publish.dependsOn('reobfJar')
	publish.dependsOn('packageSources')
	shadowJar.dependsOn(packageSources)
	shadowJar.dependsOn('classes')
}

shadowJar.finalizedBy(reobfShadowJar)
jar.finalizedBy(packageSources)
