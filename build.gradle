import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://plugins.gradle.org/m2/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

version = '1.0.2'
group = 'tyrannotitanlib'
archivesBaseName = 'tyrannotitanlib'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

configurations {
    shade
}

minecraft {
    mappings channel: 'official', version: '1.16.5'
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    
    runs {
        client {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'REGISTRIES'
            
            property 'forge.logging.console.level', 'debug'

            mods {
                lostworlds {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            
            property 'forge.logging.markers', 'REGISTRIES'
            
            property 'forge.logging.console.level', 'debug'

            mods {
                lostworlds {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url 'https://repo.repsy.io/mvn/fadookie/particleman' }
    maven { url 'https://maven.enginehub.org/repo/' }
    maven { url 'https://repo.repsy.io/mvn/gandiber/geckolib' }
    maven { url 'https://maven.blamejared.com' }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    jcenter()
	maven {
        name = "jitpack"
        url "https://jitpack.io"
    }
    maven {
    	url "https://maven.cloudsmith.io/geckolib3/geckolib/"
    }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.2'
    
    compile 'com.eliotlash.molang:molang:SNAPSHOT.12'
    compile 'com.eliotlash.mclib:mclib:SNAPSHOT.12'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
    
    compile 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
	
    shade 'com.eliotlash.molang:molang:SNAPSHOT.12'
    shade 'com.eliotlash.mclib:mclib:SNAPSHOT.12'
    shade group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0'
    shade group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'
}

shadowJar {
    configurations = [project.configurations.shade]
    from sourceSets.main.allSource
    relocate 'com.eliotlash', 'shadowed.eliotlash'
    relocate 'com.fasterxml', 'shadowed.fasterxml'
    classifier ''
}


reobf {
    shadowJar {}
}
tasks.build.dependsOn reobfShadowJar
publish.dependsOn('reobfJar')
shadowJar.dependsOn('classes')
jar.finalizedBy('reobfJar')

jar {
    manifest {
        attributes([
                "Specification-Title" : "tyrannotitanlib",
                "Specification-Vendor" : "Willatendo",
                "Specification-Version" : "1",
                "Implementation-Title" : project.name,
                "Implementation-Version" : "1.0.2",
                "Implementation-Vendor" : "tyrannotitanlib",
                "Implementation-Timestamp" : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task packageSources(type: ShadowJar, dependsOn: 'classes') {
    configurations = [project.configurations.shade]
    from sourceSets.main.allSource
    exclude('META-INF/**')
    relocate 'com.eliotlash', 'shadowed.eliotlash'
    relocate 'com.fasterxml', 'shadowed.fasterxml'
    classifier = 'sources'
}

artifacts {
    archives shadowJar
    archives packageSources
}

afterEvaluate {
    publish.dependsOn('reobfShadowJar')
    publish.dependsOn('reobfJar')
    publish.dependsOn('packageSources')
    shadowJar.dependsOn(packageSources)
    shadowJar.dependsOn('classes')
}

shadowJar.finalizedBy(reobfShadowJar)
jar.finalizedBy(packageSources)

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact shadowJar
            artifact packageSources
            artifactId = 'tyrannotitanlib'
        }
    }
}